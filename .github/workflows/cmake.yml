name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform-agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See:
    # https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependencies
      # Install any dependencies required to build your project
      run: sudo chmod ugo+x ./install_scripts/install_deps.sh && /bin/bash ./install_scripts/install_deps.sh

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required
      #  if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Install
      # Install your program
      run: sudo chmod ugo+x ./install_scripts/install_cgi_script.sh && /bin/bash ./install_scripts/install_cgi_script.sh

    - name: Test Basic Site Functionality
      #working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      #run: ctest -C ${{env.BUILD_TYPE}}
      run: sudo chmod ugo+x ./tests/test_basic_http_get.sh && /bin/bash ./tests/test_basic_http_get.sh

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push
    uses: docker/build-push-action@v4
    with:
      context: .
      file: ./Dockerfile
      push: true
      tags: ${{ secrets.DOCKERHUB_USERNAME }}/test_banka_v2:latest

      #- name: Test CGI index.cgi
      # fills the 2 forms with valid data and submits them - POST

